version: "3.5"
services:

  # Web Service
  heidrun-web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    container_name: heidrun-web
    restart: unless-stopped
    tty: true
    networks: [ heidrun ]
    volumes:
      - ../application:/home/heidrun/application
    depends_on:
      - heidrun-mysql
    env_file:
      - ../env/web
    ports: [ "8006:80" ]

  # CNode Service (Cardano Full Node)
  heidrun-cnode:
    build:
      context: ..
      dockerfile: docker/Dockerfile.cnode
    container_name: heidrun-cnode
    security_opt:
      - no-new-privileges
    restart: unless-stopped
    tty: true
    networks: [ heidrun ]
    volumes:
      - heidrun-cnode-testnet-priv:/opt/cardano/cnode/priv
      - heidrun-cnode-testnet-db:/opt/cardano/cnode/db
      - ../cnode-api:/home/guild/cnode-api:cached
      - ../private:/home/guild/private:cached
    entrypoint: /home/guild/cnode-run.sh
    environment:
      NETWORK: testnet
      CARDANO_NODE_SOCKET_PATH: /opt/cardano/cnode/sockets/node0.socket

  # MySQL Service
  heidrun-mysql:
    image: mysql:8.0
    container_name: heidrun-mysql
    restart: unless-stopped
    tty: true
    networks: [ heidrun ]
    env_file:
      - ../env/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 30
    volumes: [ "mysql:/var/lib/mysql:cached" ]
    ports: [ "33006:3306" ]

  # Redis Service
  heidrun-redis:
    container_name: heidrun-redis
    image: redis:5.0
    restart: always
    volumes:
      - redis:/data
    networks: [ heidrun ]

volumes:
  heidrun-cnode-testnet-priv:
  heidrun-cnode-testnet-db:
  mysql:
    driver: local
  redis:

networks:
  heidrun:
    driver: bridge
